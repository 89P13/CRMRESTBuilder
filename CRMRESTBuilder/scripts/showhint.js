// CodeMirror, copyright (c) by Marijn Haverbeke and others
// Distributed under an MIT license: http://codemirror.net/LICENSE
!function (a) { "object" == typeof exports && "object" == typeof module ? a(require("../../lib/codemirror")) : "function" == typeof define && define.amd ? define(["../../lib/codemirror"], a) : a(CodeMirror) }(function (a) { "use strict"; function d(a, b) { this.cm = a, this.options = b, this.widget = null, this.debounce = 0, this.tick = 0, this.startPos = this.cm.getCursor("start"), this.startLen = this.cm.getLine(this.startPos.line).length - this.cm.getSelection().length; var c = this; a.on("cursorActivity", this.activityFunc = function () { c.cursorActivity() }) } function g(b, c) { var d = a.cmpPos(c.from, b.from); return d > 0 && b.to.ch - b.from.ch != c.to.ch - c.from.ch } function h(a, b, c) { var d = a.options.hintOptions, e = {}; for (var f in p) e[f] = p[f]; if (d) for (var f in d) void 0 !== d[f] && (e[f] = d[f]); if (c) for (var f in c) void 0 !== c[f] && (e[f] = c[f]); return e.hint.resolve && (e.hint = e.hint.resolve(a, b)), e } function i(a) { return "string" == typeof a ? a : a.text } function j(a, b) { function f(a, d) { var f; f = "string" != typeof d ? function (a) { return d(a, b) } : c.hasOwnProperty(d) ? c[d] : d, e[a] = f } var c = { Up: function () { b.moveFocus(-1) }, Down: function () { b.moveFocus(1) }, PageUp: function () { b.moveFocus(-b.menuSize() + 1, !0) }, PageDown: function () { b.moveFocus(b.menuSize() - 1, !0) }, Home: function () { b.setFocus(0) }, End: function () { b.setFocus(b.length - 1) }, Enter: b.pick, Tab: b.pick, Esc: b.close }, d = a.options.customKeys, e = d ? {} : c; if (d) for (var g in d) d.hasOwnProperty(g) && f(g, d[g]); var h = a.options.extraKeys; if (h) for (var g in h) h.hasOwnProperty(g) && f(g, h[g]); return e } function k(a, b) { for (; b && b != a;) { if ("LI" === b.nodeName.toUpperCase() && b.parentNode == a) return b; b = b.parentNode } } function l(d, e) { this.completion = d, this.data = e, this.picked = !1; var f = this, g = d.cm, h = this.hints = document.createElement("ul"); h.className = "CodeMirror-hints", this.selectedHint = e.selectedHint || 0; for (var l = e.list, m = 0; m < l.length; ++m) { var n = h.appendChild(document.createElement("li")), o = l[m], p = b + (m != this.selectedHint ? "" : " " + c); null != o.className && (p = o.className + " " + p), n.className = p, o.render ? o.render(n, e, o) : n.appendChild(document.createTextNode(o.displayText || i(o))), n.hintId = m } var q = g.cursorCoords(d.options.alignWithWord ? e.from : null), r = q.left, s = q.bottom, t = !0; h.style.left = r + "px", h.style.top = s + "px"; var u = window.innerWidth || Math.max(document.body.offsetWidth, document.documentElement.offsetWidth), v = window.innerHeight || Math.max(document.body.offsetHeight, document.documentElement.offsetHeight); (d.options.container || document.body).appendChild(h); var w = h.getBoundingClientRect(), x = w.bottom - v, y = h.scrollHeight > h.clientHeight + 1, z = g.getScrollInfo(); if (x > 0) { var A = w.bottom - w.top, B = q.top - (q.bottom - w.top); if (B - A > 0) h.style.top = (s = q.top - A) + "px", t = !1; else if (A > v) { h.style.height = v - 5 + "px", h.style.top = (s = q.bottom - w.top) + "px"; var C = g.getCursor(); e.from.ch != C.ch && (q = g.cursorCoords(C), h.style.left = (r = q.left) + "px", w = h.getBoundingClientRect()) } } var D = w.right - u; if (D > 0 && (w.right - w.left > u && (h.style.width = u - 5 + "px", D -= w.right - w.left - u), h.style.left = (r = q.left - D) + "px"), y) for (var E = h.firstChild; E; E = E.nextSibling) E.style.paddingRight = g.display.nativeBarWidth + "px"; if (g.addKeyMap(this.keyMap = j(d, { moveFocus: function (a, b) { f.changeActive(f.selectedHint + a, b) }, setFocus: function (a) { f.changeActive(a) }, menuSize: function () { return f.screenAmount() }, length: l.length, close: function () { d.close() }, pick: function () { f.pick() }, data: e })), d.options.closeOnUnfocus) { var F; g.on("blur", this.onBlur = function () { F = setTimeout(function () { d.close() }, 100) }), g.on("focus", this.onFocus = function () { clearTimeout(F) }) } return g.on("scroll", this.onScroll = function () { var a = g.getScrollInfo(), b = g.getWrapperElement().getBoundingClientRect(), c = s + z.top - a.top, e = c - (window.pageYOffset || (document.documentElement || document.body).scrollTop); return t || (e += h.offsetHeight), e <= b.top || e >= b.bottom ? d.close() : (h.style.top = c + "px", void (h.style.left = r + z.left - a.left + "px")) }), a.on(h, "dblclick", function (a) { var b = k(h, a.target || a.srcElement); b && null != b.hintId && (f.changeActive(b.hintId), f.pick()) }), a.on(h, "click", function (a) { var b = k(h, a.target || a.srcElement); b && null != b.hintId && (f.changeActive(b.hintId), d.options.completeOnSingleClick && f.pick()) }), a.on(h, "mousedown", function () { setTimeout(function () { g.focus() }, 20) }), a.signal(e, "select", l[0], h.firstChild), !0 } function m(a, b) { if (!a.somethingSelected()) return b; for (var c = [], d = 0; d < b.length; d++) b[d].supportsSelection && c.push(b[d]); return c } function n(a, b, c, d) { if (a.async) a(b, d, c); else { var e = a(b, c); e && e.then ? e.then(d) : d(e) } } function o(b, c) { var e, d = b.getHelpers(c, "hint"); if (d.length) { var f = function (a, b, c) { function f(d) { return d == e.length ? b(null) : void n(e[d], a, c, function (a) { a && a.list.length > 0 ? b(a) : f(d + 1) }) } var e = m(a, d); f(0) }; return f.async = !0, f.supportsSelection = !0, f } return (e = b.getHelper(b.getCursor(), "hintWords")) ? function (b) { return a.hint.fromList(b, { words: e }) } : a.hint.anyword ? function (b, c) { return a.hint.anyword(b, c) } : function () { } } var b = "CodeMirror-hint", c = "CodeMirror-hint-active"; a.showHint = function (a, b, c) { if (!b) return a.showHint(c); c && c.async && (b.async = !0); var d = { hint: b }; if (c) for (var e in c) d[e] = c[e]; return a.showHint(d) }, a.defineExtension("showHint", function (b) { b = h(this, this.getCursor("start"), b); var c = this.listSelections(); if (!(c.length > 1)) { if (this.somethingSelected()) { if (!b.hint.supportsSelection) return; for (var e = 0; e < c.length; e++) if (c[e].head.line != c[e].anchor.line) return } this.state.completionActive && this.state.completionActive.close(); var f = this.state.completionActive = new d(this, b); f.options.hint && (a.signal(this, "startCompletion", this), f.update(!0)) } }); var e = window.requestAnimationFrame || function (a) { return setTimeout(a, 1e3 / 60) }, f = window.cancelAnimationFrame || clearTimeout; d.prototype = { close: function () { this.active() && (this.cm.state.completionActive = null, this.tick = null, this.cm.off("cursorActivity", this.activityFunc), this.widget && this.data && a.signal(this.data, "close"), this.widget && this.widget.close(), a.signal(this.cm, "endCompletion", this.cm)) }, active: function () { return this.cm.state.completionActive == this }, pick: function (b, c) { var d = b.list[c]; d.hint ? d.hint(this.cm, b, d) : this.cm.replaceRange(i(d), d.from || b.from, d.to || b.to, "complete"), a.signal(b, "pick", d), this.close() }, cursorActivity: function () { this.debounce && (f(this.debounce), this.debounce = 0); var a = this.cm.getCursor(), b = this.cm.getLine(a.line); if (a.line != this.startPos.line || b.length - a.ch != this.startLen - this.startPos.ch || a.ch < this.startPos.ch || this.cm.somethingSelected() || a.ch && this.options.closeCharacters.test(b.charAt(a.ch - 1))) this.close(); else { var c = this; this.debounce = e(function () { c.update() }), this.widget && this.widget.disable() } }, update: function (a) { if (null != this.tick) { var b = this, c = ++this.tick; n(this.options.hint, this.cm, this.options, function (d) { b.tick == c && b.finishUpdate(d, a) }) } }, finishUpdate: function (b, c) { this.data && a.signal(this.data, "update"); var d = this.widget && this.widget.picked || c && this.options.completeSingle; this.widget && this.widget.close(), b && this.data && g(this.data, b) || (this.data = b, b && b.list.length && (d && 1 == b.list.length ? this.pick(b, 0) : (this.widget = new l(this, b), a.signal(b, "shown")))) } }, l.prototype = { close: function () { if (this.completion.widget == this) { this.completion.widget = null, this.hints.parentNode.removeChild(this.hints), this.completion.cm.removeKeyMap(this.keyMap); var a = this.completion.cm; this.completion.options.closeOnUnfocus && (a.off("blur", this.onBlur), a.off("focus", this.onFocus)), a.off("scroll", this.onScroll) } }, disable: function () { this.completion.cm.removeKeyMap(this.keyMap); var a = this; this.keyMap = { Enter: function () { a.picked = !0 } }, this.completion.cm.addKeyMap(this.keyMap) }, pick: function () { this.completion.pick(this.data, this.selectedHint) }, changeActive: function (b, d) { if (b >= this.data.list.length ? b = d ? this.data.list.length - 1 : 0 : b < 0 && (b = d ? 0 : this.data.list.length - 1), this.selectedHint != b) { var e = this.hints.childNodes[this.selectedHint]; e.className = e.className.replace(" " + c, ""), e = this.hints.childNodes[this.selectedHint = b], e.className += " " + c, e.offsetTop < this.hints.scrollTop ? this.hints.scrollTop = e.offsetTop - 3 : e.offsetTop + e.offsetHeight > this.hints.scrollTop + this.hints.clientHeight && (this.hints.scrollTop = e.offsetTop + e.offsetHeight - this.hints.clientHeight + 3), a.signal(this.data, "select", this.data.list[this.selectedHint], e) } }, screenAmount: function () { return Math.floor(this.hints.clientHeight / this.hints.firstChild.offsetHeight) || 1 } }, a.registerHelper("hint", "auto", { resolve: o }), a.registerHelper("hint", "fromList", function (b, c) { var d = b.getCursor(), e = b.getTokenAt(d), f = a.Pos(d.line, e.end); if (e.string && /\w/.test(e.string[e.string.length - 1])) var g = e.string, h = a.Pos(d.line, e.start); else var g = "", h = f; for (var i = [], j = 0; j < c.words.length; j++) { var k = c.words[j]; k.slice(0, g.length) == g && i.push(k) } if (i.length) return { list: i, from: h, to: f } }), a.commands.autocomplete = a.showHint; var p = { hint: a.hint.auto, completeSingle: !0, alignWithWord: !0, closeCharacters: /[\s()\[\]{};:>,]/, closeOnUnfocus: !0, completeOnSingleClick: !0, container: null, customKeys: null, extraKeys: null }; a.defineOption("hintOptions", null) });